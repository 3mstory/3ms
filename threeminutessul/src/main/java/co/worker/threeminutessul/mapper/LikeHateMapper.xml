<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="likeyhate">
	<!-- <update id="">SQL</update>
	<delete id="">SQL</delete>
	<insert id="">SQL</insert>
	<select id="">SQL</select> -->	
	<select id="getLikeHateCount" parameterType="likehatevo" resultType="likehatevo">
		select 
			likehateSeq,
			boardSeq,
			userSeq,
			isLike,
			isHate
		from tblLikeHate 
		where boardSeq = #{boardSeq} and userSeq = #{userSeq}
	</select>
	
	<insert id ="insertLikeHate" parameterType="likehatevo">
		insert into tblLikeHate(boardSeq, userSeq, isLike, isHate) values( #{boardSeq},#{userSeq},#{isLike},#{isHate})
	</insert>
	
	<update id ="updateLikeHate" parameterType="likehatevo">
		update tblLikeHate set isLike = #{isLike}, isHate = #{isHate} where boardSeq =  #{boardSeq} and userSeq = #{userSeq}
	</update>
	
	<select id="getReturnlikehate" parameterType="likehatevo" resultType="java.util.HashMap">
		select 
			coalesce(sum(isLike)::integer,0) as like, 
			coalesce(sum(isHate)::integer,0) as hate,
			(select count(*) from tblLikeHate where userSeq = #{userSeq} and boardSeq = #{boardSeq})::integer as isMyClicked,--접속한유저가 그글에서 좋아요 싫어요를 눌렀는지 여부
			(select case when isLike = 1 then 'clicklike' else 'clickhate' end 
			 from tblLikeHate where userSeq = #{userSeq} and boardSeq = #{boardSeq}) as isLikeHate			
		from tblLikeHate 
		where boardSeq = #{boardSeq}
		  and (isLike=1
		  or isHate=1)
	</select>
	
	
	
	
	
	
	
	
	
</mapper>

