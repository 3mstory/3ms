<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board">
	
	<select id="boardList" resultType="co.worker.threeminutessul.board.model.BoardVO">
		select
			b.boardSeq,
			b.title,
			ui.userid,
			ui.nickname,
			ui.userSeq as writer,
			case 
				when to_char(regdate,'YYYY-MM-DD hh24:mi:ss') = to_char(regdate,'YYYY-MM-DD hh24:mi:ss') then regdate 
				else updatedate 
			end as regdate,
			ui.profile,
			b.isanony
		from tblBoard b
			inner join tblUserInfo ui on b.writer = ui.userSeq
		order by b.boardSeq desc
	</select>
	
	<insert id="insertBoard" parameterType="boardVo">
		insert into tblBoard(writer,title,content,regdate,updatedate,likey,hate,isanony) 
		values(
			#{writer},#{title},#{contents},now(),now(),#{likey},#{hate},#{isanony}	
		)
	</insert>
	
	<select id="getLikeHate" parameterType="likehatevo" resultType="java.util.HashMap">
		select 
			coalesce(sum(isLike)::integer,0) as like, 
			coalesce(sum(isHate)::integer,0) as hate,
			(select count(*) from tblLikeHate where userSeq = #{userSeq} and boardSeq = #{boardSeq})::integer as isMyClicked,--접속한유저가 그글에서 좋아요 싫어요를 눌렀는지 여부
			(select case when isLike = 1 then 'clicklike' else 'clickhate' end 
			 from tblLikeHate where userSeq = #{userSeq} and boardSeq = #{boardSeq}) as isLikeHate
		from tblLikeHate 
		where boardSeq = #{boardSeq}
		  and (isLike=1
		  or isHate=1)
	</select>
	
	<select id="getBoardContent" parameterType="Integer" resultType="String">
		select content
		from tblBoard
		where boardSeq = #{boardSeq}
	</select>
	
</mapper>

